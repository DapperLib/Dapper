#nullable enable
Dapper.DbDataSourceExtensions
static Dapper.DbDataSourceExtensions.Execute(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> int
static Dapper.DbDataSourceExtensions.Query(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> System.Collections.Generic.List<dynamic!>!
static Dapper.DbDataSourceExtensions.Query<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> System.Collections.Generic.List<T>!
static Dapper.DbDataSourceExtensions.QueryUnbuffered(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> System.Collections.Generic.IEnumerable<dynamic!>!
static Dapper.DbDataSourceExtensions.QueryUnbuffered<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> System.Collections.Generic.IEnumerable<T>!
static Dapper.DbDataSourceExtensions.ExecuteAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<int>!
static Dapper.DbDataSourceExtensions.QueryAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.List<dynamic!>!>!
static Dapper.DbDataSourceExtensions.QueryAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.List<T>!>!
static Dapper.DbDataSourceExtensions.QueryUnbufferedAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<dynamic!>!
static Dapper.DbDataSourceExtensions.QueryUnbufferedAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<T>!
static Dapper.DbDataSourceExtensions.ExecuteReader(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, System.Data.CommandBehavior behavior = System.Data.CommandBehavior.Default, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> System.Data.Common.DbDataReader!
static Dapper.DbDataSourceExtensions.ExecuteReaderAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, System.Data.CommandBehavior behavior = System.Data.CommandBehavior.Default, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Data.Common.DbDataReader!>!
static Dapper.DbDataSourceExtensions.ExecuteScalar(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> object?
static Dapper.DbDataSourceExtensions.ExecuteScalar<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> T?
static Dapper.DbDataSourceExtensions.ExecuteScalarAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<object?>!
static Dapper.DbDataSourceExtensions.ExecuteScalarAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T?>!
static Dapper.DbDataSourceExtensions.QueryFirst(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> dynamic!
static Dapper.DbDataSourceExtensions.QueryFirst<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> T
static Dapper.DbDataSourceExtensions.QueryFirstAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dynamic!>!
static Dapper.DbDataSourceExtensions.QueryFirstAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T>!
static Dapper.DbDataSourceExtensions.QueryFirstOrDefault(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> dynamic?
static Dapper.DbDataSourceExtensions.QueryFirstOrDefault<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> T?
static Dapper.DbDataSourceExtensions.QueryFirstOrDefaultAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dynamic?>!
static Dapper.DbDataSourceExtensions.QueryFirstOrDefaultAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T?>!
static Dapper.DbDataSourceExtensions.QueryMultiple(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> Dapper.SqlMapper.GridReader!
static Dapper.DbDataSourceExtensions.QueryMultipleAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Dapper.SqlMapper.GridReader!>!
static Dapper.DbDataSourceExtensions.QuerySingle(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> dynamic!
static Dapper.DbDataSourceExtensions.QuerySingle<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> T
static Dapper.DbDataSourceExtensions.QuerySingleAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dynamic!>!
static Dapper.DbDataSourceExtensions.QuerySingleAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T>!
static Dapper.DbDataSourceExtensions.QuerySingleOrDefault(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> dynamic?
static Dapper.DbDataSourceExtensions.QuerySingleOrDefault<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None) -> T?
static Dapper.DbDataSourceExtensions.QuerySingleOrDefaultAsync(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<dynamic?>!
static Dapper.DbDataSourceExtensions.QuerySingleOrDefaultAsync<T>(this System.Data.Common.DbDataSource! source, string! sql, object? param = null, int commandTimeout = -1, System.Data.CommandType commandType = (System.Data.CommandType)0, Dapper.CommandFlags flags = Dapper.CommandFlags.None, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T?>!
